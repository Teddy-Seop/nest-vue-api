name: CI-CD-Pipeline
# env:
#   EB_PACKAGE_S3_BUCKET: "pms-notification"
#   EB_APPLICATION: "notification-sms"
#   EB_ENVIRONMENT: "NotificationSms-Dev"
#   DEPLOY_PACKAGE: "notification_${{github.sha}}.zip"
#   AWS_REGION: "ap-northeast-2"

on:
  release:
    action: published

jobs:
  CI:
    runs-on: ubuntu-latest
    
    steps:
      - name: Git clone repository
        uses: actions/checkout@v1
      
      - name: NPM Install
        run: npm ci
        
      - name: Build
        run: npm run build sms
      
      - name: Create ZIP deployment package
        run: zip -r ${{env.DEPLOY_PACKAGE}} ./ -x *.git*
      
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_DEV }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_DEV }}
      #     aws-region: ${{ env.AWS_REGION }}
      
      # - name: Copy deployment package to S3 Bucket
      #   run: aws s3 cp ${{ env.DEPLOY_PACKAGE }} s3://${{ env.EB_PACKAGE_S3_BUCKET }}/

  # CD:
  #   runs-on: ubuntu-latest
  #   needs: [CI]
    
  #   steps:
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_DEV }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_DEV }}
  #         aws-region: ${{ env.AWS_REGION }}
  #     - name: Create new EB Application version
  #       run: |
  #         aws elasticbeanstalk create-application-version \
  #         --application-name ${{ env.EB_APPLICATION }} \
  #         --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET }}",S3Key="${{ env.DEPLOY_PACKAGE }}" \
  #         --version-label "Ver-${{github.sha}}" \
  #         --description "CommitSHA-${{github.sha}}"
     
  #     - name: Deploy new EB Application version
  #       run: |
  #         aws elasticbeanstalk update-environment \
  #         --environment-name ${{ env.EB_ENVIRONMENT }} \
  #         --version-label "Ver-${{github.sha}}"

  # Release:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: release-drafter/release-drafter@v5
  #       id: create_release
  #       with:
  #         config-name: release-drafter-config.yml
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
